# Generated by Django 4.2.6 on 2023-11-20 10:37

import ckeditor_uploader.fields
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Əlavə edilmə tarixi')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Yenilənmə tarixi')),
                ('published_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Nəşr tarixi')),
                ('status', models.CharField(choices=[('DF', 'Draft'), ('PB', 'Published')], default='DF', max_length=2)),
                ('event_title', models.CharField(max_length=250, unique=True, verbose_name='Hadisə başlığı')),
                ('event_content', ckeditor_uploader.fields.RichTextUploadingField(verbose_name='Hadisənin kontenti')),
                ('event_photo', models.ImageField(unique=True, upload_to='events/')),
                ('event_location', models.CharField(max_length=150, verbose_name='Hadisənin məkanı')),
                ('event_slug', models.SlugField(blank=True, help_text='Bu qismi boş buraxın. Avtomatik doldurulacaq.', max_length=500, null=True, verbose_name='Link adı')),
                ('event_author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='events', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Hadisə',
                'verbose_name_plural': 'Hadisələr',
                'ordering': ['-published_at'],
            },
        ),
        migrations.CreateModel(
            name='IPs',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('view_ip', models.GenericIPAddressField(editable=False, verbose_name='IP ünvanı')),
            ],
            options={
                'verbose_name': 'IP ünvanı',
                'verbose_name_plural': 'IP ünvanları',
            },
        ),
        migrations.CreateModel(
            name='News',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Əlavə edilmə tarixi')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Yenilənmə tarixi')),
                ('published_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Nəşr tarixi')),
                ('status', models.CharField(choices=[('DF', 'Draft'), ('PB', 'Published')], default='DF', max_length=2)),
                ('news_title', models.CharField(max_length=150, unique=True, verbose_name='Xəbər başlığı')),
                ('news_content', ckeditor_uploader.fields.RichTextUploadingField(blank=True, null=True, verbose_name='Xəbər mətni')),
                ('news_image', models.ImageField(upload_to='news/', verbose_name='Xəbər fotosu')),
                ('slug', models.SlugField(blank=True, help_text='Bu qismi boş buraxın. Avtomatik doldurulacaq.', max_length=500, null=True, verbose_name='Link adı')),
                ('author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='news', to=settings.AUTH_USER_MODEL)),
                ('viewed_ips', models.ManyToManyField(editable=False, related_name='news', to='core.ips', verbose_name='Xəbərlərin görüntüləndiyi IP ünvanları')),
            ],
            options={
                'verbose_name': 'Xəbər',
                'verbose_name_plural': 'Xəbərlər',
                'ordering': ['-published_at'],
            },
        ),
        migrations.CreateModel(
            name='Event_comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Əlavə edilmə tarixi')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Yenilənmə tarixi')),
                ('published_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Nəşr tarixi')),
                ('status', models.CharField(choices=[('DF', 'Draft'), ('PB', 'Published')], default='DF', max_length=2)),
                ('comment_text', models.TextField(max_length=250, verbose_name='Hadisəyə yazılmış rəy')),
                ('comment_slug', models.SlugField(blank=True, help_text='Bu qismi boş buraxın. Avtomatik doldurulacaq.', max_length=500, null=True, verbose_name='Link adı')),
                ('active', models.BooleanField(default=True)),
                ('comment_author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='event_comments', to=settings.AUTH_USER_MODEL)),
                ('disliked', models.ManyToManyField(editable=False, related_name='event_disliked_comments', to=settings.AUTH_USER_MODEL, verbose_name='Bəyənməyənlər')),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='event_comments', to='core.event')),
                ('liked', models.ManyToManyField(editable=False, related_name='event_liked_comments', to=settings.AUTH_USER_MODEL, verbose_name='Bəyənənlər')),
            ],
            options={
                'verbose_name': 'Hadisə rəyi',
                'verbose_name_plural': 'Hadisə rəyləri',
                'ordering': ['-published_at'],
            },
        ),
        migrations.AddField(
            model_name='event',
            name='viewed_ips',
            field=models.ManyToManyField(editable=False, related_name='events', to='core.ips', verbose_name='Hadisələrin görüntüləndiyi IP ünvanları'),
        ),
        migrations.CreateModel(
            name='News_comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Əlavə edilmə tarixi')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Yenilənmə tarixi')),
                ('published_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Nəşr tarixi')),
                ('status', models.CharField(choices=[('DF', 'Draft'), ('PB', 'Published')], default='DF', max_length=2)),
                ('comment_text', models.TextField(max_length=250, verbose_name='Xəbər rəyi')),
                ('comment_slug', models.SlugField(blank=True, help_text='Bu qismi boş buraxın. Avtomatik doldurulacaq.', max_length=500, null=True, verbose_name='Link adı')),
                ('active', models.BooleanField(default=True)),
                ('comment_author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='news_comments', to=settings.AUTH_USER_MODEL)),
                ('disliked', models.ManyToManyField(editable=False, related_name='news_disliked_comments', to=settings.AUTH_USER_MODEL, verbose_name='Bəyənməyənlər')),
                ('liked', models.ManyToManyField(editable=False, related_name='news_liked_comments', to=settings.AUTH_USER_MODEL, verbose_name='Bəyənənlər')),
                ('news', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='news_comments', to='core.news')),
            ],
            options={
                'verbose_name': 'Xəbər rəyi',
                'verbose_name_plural': 'Xəbər rəyləri',
                'ordering': ['-published_at'],
                'indexes': [models.Index(fields=['-published_at'], name='core_news_c_publish_47096d_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='news',
            index=models.Index(fields=['-published_at'], name='core_news_publish_ff08d5_idx'),
        ),
        migrations.AddIndex(
            model_name='event_comment',
            index=models.Index(fields=['-published_at'], name='core_event__publish_850a9b_idx'),
        ),
        migrations.AddIndex(
            model_name='event',
            index=models.Index(fields=['-published_at'], name='core_event_publish_881e94_idx'),
        ),
    ]
